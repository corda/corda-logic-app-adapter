{
  "definitions": {},
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/corda/corda-logicapp-connector/blob/master/src/main/resources/schemata/flow-invocation-request.schema.json",
  "type": "object",
  "required": [
    "messageName",
    "requestId",
    "workflowName",
    "parameters",
    "messageSchemaVersion"
  ],
  "properties": {
    "messageName": {
      "$id": "#/properties/messageName",
      "type": "string",
      "enum": [
        "CreateContractRequest"
      ]
    },
    "requestId": {
      "$id": "#/properties/requestId",
      "type": "string",
      "description": "A simple correlation ID, generated at the source, opaque to the key components.",
      "examples": [
        "f37c65a6-d69a-4fec-a5c0-e699f8d0ed08"
      ]
    },
    "workflowName": {
      "$id": "#/properties/workflowName",
      "type": "string",
      "description": "The name of the flow to be invoked. Preferably in fully qualified form, i.e. containing the relevant package name.",
      "examples": [
        "net.corda.workbench.refrigeratedTransportation.flow.CreateFlow"
      ],
      "pattern": "(?:^\\w+|\\w+.\\w+)+$"
    },
    "parameters": {
      "$id": "#/properties/parameters",
      "type": "array",
      "description": "An flat array of objects representing key-value pairs. The name is expected to equal the flow invocation parameter name. The value provided represents the value to be passed to the flow invocation log",
      "items": {
        "$id": "#/properties/parameters/items",
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "$id": "#/properties/parameters/items/properties/name",
            "type": "string"
          },
          "value": {
            "$id": "#/properties/parameters/items/properties/value",
            "type": "string"
          }
        }
      }
    },
    "messageSchemaVersion": {
      "$id": "#/properties/messageSchemaVersion",
      "type": "string",
      "pattern": "^\\d+.\\d+.\\d+$"
    }
  }
}