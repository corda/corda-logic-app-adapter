group "com.r3"
version "0.0.1-SNAPSHOT"

buildscript {
    ext {
        kotlin_version = '1.2.71'
        corda_platform_version = '4'
        corda_release_group = 'net.corda'
        corda_release_version = "4.0"
        corda_release_version = '4.0'
        corda_gradle_plugins_version = '4.0.42'
        junit_version = '4.12'
        assertj_version = '3.8.0'
        quasar_version = '0.7.10'
        slf4j_version = '1.7.25'
        log4j_version = '2.11.2'
        azure_servicebus_version = '2.0.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

allprojects {
    apply plugin: 'kotlin'

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true   // Useful for reflection.
        }
    }

    jar {
        // This makes the JAR's SHA-256 hash repeatable.
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }
}

apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

dependencies {
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"

    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    cordaCompile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    cordaCompile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    cordaCompile "org.slf4j:jul-to-slf4j:$slf4j_version"

    cordaCompile "com.github.everit-org.json-schema:org.everit.json.schema:1.11.1"

    cordaCompile "com.microsoft.azure:azure-servicebus:$azure_servicebus_version"
    
    testCompile "junit:junit:$junit_version"
    testCompile "com.natpryce:hamkrest:1.7.0.0"

    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
}

cordapp {
    info {
        name "R3 Corda LogicApp Connector"
        vendor "R3"
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
    }
}

task installQuasar(type: Copy) {
    destinationDir rootProject.file("lib")
    from(configurations.quasar) {
        rename 'quasar-core(.*).jar', 'quasar.jar'
    }
}
